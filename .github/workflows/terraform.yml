# This workflow installs the latest version of Terraform CLI and configures the Terraform CLI configuration file
# with an API token for Terraform Cloud (app.terraform.io). On pull request events, this workflow will run
# `terraform init`, `terraform fmt`, and `terraform plan` (speculative plan via Terraform Cloud). On push events
name: 'Terraform'

on:
  push:
    branches: [ "main" ]
  pull_request:

permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Install the latest version of Terraform CLI
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: terraform fmt -check

    - name: Terraform Validate
      run: terraform validate
      
    - name: Install libvirt
      run: sudo apt-get install -y libvirt-daemon-system
    - name: Create default pool
      run: sudo virsh pool-define-as --name default --type dir --target /var/lib/libvirt/images
    - name: Fix permissions
      run: sudo chown root:kvm /var/lib/libvirt/images
    - name: Start default pool
      run: sudo virsh pool-start default
    - name: Terraform Plan
      run: sudo terraform plan -out tfplan
    - name: Terraform apply
      # The only way to disable kvm acceleration (github actions does not support nested virtualization at this thime)
      # https://github.com/dmacvicar/terraform-provider-libvirt/issues/738
      run: sudo TERRAFORM_LIBVIRT_TEST_DOMAIN_TYPE=qemu terraform apply tfplan