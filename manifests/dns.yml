apiVersion: v1
kind: Namespace
metadata:
  name: coredns
---
apiVersion: helm.cattle.io/v1
kind: HelmChart
metadata:
  name: coredns
  namespace: kube-system
spec:
  repo: https://coredns.github.io/helm
  chart: coredns
  targetNamespace: coredns
  valuesContent: |-
    isClusterService: false
    serviceType: LoadBalancer
    rbac:
      create: true
    # Default zone is what Kubernetes recommends:
    # https://kubernetes.io/docs/tasks/administer-cluster/dns-custom-nameservers/#coredns-configmap-options
    servers:
    - zones:
      - zone: .
      port: 53
      # If serviceType is nodePort you can specify nodePort here
      # nodePort: 30053
      plugins:
      - name: errors
      # Serves a /health endpoint on :8080, required for livenessProbe
      - name: health
        configBlock: |-
          lameduck 5s
      # Serves a /ready endpoint on :8181, required for readinessProbe
      - name: ready
      # Required to query kubernetes API for data
      - name: kubernetes
        parameters: cluster.local in-addr.arpa ip6.arpa
        configBlock: |-
          pods insecure
          fallthrough in-addr.arpa ip6.arpa
          ttl 30
      # Serves a /metrics endpoint on :9153, required for serviceMonitor
      - name: prometheus
        parameters: 0.0.0.0:9153
      - name: forward
        parameters: . 9.9.9.9:53 149.112.112.112:53 [2620:fe::fe]:53 [2620:fe::9]:53
      - name: cache
      - name: loop
      - name: reload
      - name: loadbalance
      # TODO Add the https://coredns.io/plugins/hosts/ plugin and download the pihole hosts file https://raw.githubusercontent.com/StevenBlack/hosts/master/hosts with a cron job
      - name: etcd
        parameters: k3s.local
        configBlock: |-
          stubzones
          path /skydns
          endpoint http://etcd.coredns:2379
---
apiVersion: helm.cattle.io/v1
kind: HelmChart
metadata:
  name: etcd
  namespace: kube-system
spec:
  repo: https://charts.bitnami.com/bitnami
  chart: etcd
  targetNamespace: coredns
  valuesContent: |-
    auth:
      rbac:
        create: false
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: external-dns
rules:
- apiGroups: [""]
  resources: ["services","endpoints","pods"]
  verbs: ["get","watch","list"]
- apiGroups: ["extensions","networking.k8s.io"]
  resources: ["ingresses"]
  verbs: ["get","watch","list"]
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: external-dns-viewer
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: external-dns
subjects:
- kind: ServiceAccount
  name: external-dns
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: external-dns
  namespace: kube-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: external-dns
  namespace: kube-system
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: external-dns
  template:
    metadata:
      labels:
        app: external-dns
    spec:
      serviceAccountName: external-dns
      containers:
      - name: external-dns
        image: registry.k8s.io/external-dns/external-dns:v0.13.2
        args:
        - --source=ingress
        - --provider=coredns
        env:
        - name: ETCD_URLS
          value: http://etcd.coredns:2379
